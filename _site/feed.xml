<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-05-02T03:35:21+03:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Quantum whatever</title><subtitle>Personal blog about physics and programming
</subtitle><author><name>Andrey Geondzhian</name></author><entry><title type="html">Quantum Computing : Modeling Bell’s (CHSH) inequality with Qiskit</title><link href="http://localhost:4000/jekyll/update/2020/04/25/chsh-inq.html" rel="alternate" type="text/html" title="Quantum Computing :  Modeling Bell's (CHSH) inequality with Qiskit" /><published>2020-04-25T06:11:00+03:00</published><updated>2020-04-25T06:11:00+03:00</updated><id>http://localhost:4000/jekyll/update/2020/04/25/chsh-inq</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2020/04/25/chsh-inq.html">&lt;script type=&quot;text/javascript&quot; src=&quot;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_CHTML&quot;&gt;&lt;/script&gt;

&lt;script type=&quot;text/x-mathjax-config&quot;&gt;
        MathJax.Hub.Config({
          TeX: { equationNumbers: { autoNumber: &quot;AMS&quot; } }
        });
        &lt;/script&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/geonda/quantum-computing&quot;&gt;source on github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/correlation.png&quot; alt=&quot;CHSH correlation function (S) vs relative angle between detectors ($\theta$).&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;CHSH correlation function vs relative angle between detectors (&lt;img src=&quot;https://render.githubusercontent.com/render/math?math=%5Ctheta&quot; alt=&quot;\theta&quot; /&gt;).&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;formulation&quot;&gt;Formulation&lt;/h3&gt;
&lt;hr /&gt;

&lt;p&gt;From the classical point of view, the following inequality holds for any local hidden variable theory
\begin{equation}
 |S|&amp;lt;2 \ .
\end{equation}
Here
\begin{equation}
S=E(\textbf{AB})-E(\textbf{AB’})+E(\textbf{A’B’})+E(\textbf{A’B}) \ ,
\end{equation}
where \(E(\textbf{AB})\) - is a correlation function (for example, spin-spin correlation function) between two points on different sides of the source and arbitary unit vectors (\(\textbf{A}\), \(\textbf{B}\)) specify orientations of the linear detectors.&lt;/p&gt;

&lt;p&gt;However, within the framework of the quantum mechanics (QM), things are different. QM states that there are specific configurations of the experiment for which &lt;img src=&quot;https://render.githubusercontent.com/render/math?math=S&quot; alt=&quot;S&quot; /&gt; becomes greater than two.&lt;/p&gt;

&lt;p&gt;Thus ineq. 1 appears to be an important and convenient test in favor of one or another theory.  So far, the experiment (despite some challenges) confirms the prediction of the quantum mechanic and, consequently, the non-locality of our nature.&lt;/p&gt;

&lt;h3 id=&quot;detectors&quot;&gt;Detectors&lt;/h3&gt;
&lt;hr /&gt;

&lt;p&gt;Whithout losing generality we can choose to constrain angles between detectors as \(\angle(\textbf{A, B})=\angle(\textbf{B, A’})=\angle(\textbf{A’,B’ })=\theta\).&lt;/p&gt;

&lt;p&gt;Then \(S\) becomes only a function of \(\theta \)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/bloch_sphere.png&quot; alt=&quot;Positions of detectors (A, A', B, B'). Bloch's spheres were projected onto xz plane.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Projection of Bloch’s sphere onto xz plane and positions of detectors (A, A’, B, B’) for &lt;img src=&quot;https://render.githubusercontent.com/render/math?math=%5Ctheta%3D0%2C%20%5Cpi%2F4%2C%20%5Cpi%2F2&quot; alt=&quot;\theta=0, \pi/4, \pi/2&quot; /&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;qm-analytical-solution-for-spin-12-system&quot;&gt;QM analytical solution for spin 1/2 system&lt;/h3&gt;
&lt;hr /&gt;

&lt;p&gt;\begin{equation}
E(\textbf{AB}) = &amp;lt; \psi|\sigma(\textbf{A}) \sigma(\textbf{B})|\psi &amp;gt; =cos(\theta) \ ,
\end{equation}&lt;/p&gt;

&lt;p&gt;here \( | \psi &amp;gt;  \) is an entangled state of two qubits (Bell state):
\begin{equation}
\left |\psi &amp;gt; \right .= \frac{[ \ |00&amp;gt; + |11&amp;gt; ]}{\sqrt{2}} \ .
\end{equation}&lt;/p&gt;

&lt;h3 id=&quot;modeling-with-qiskit&quot;&gt;Modeling with Qiskit&lt;/h3&gt;
&lt;hr /&gt;

&lt;p&gt;\begin{equation}
E(\textbf{AB}) = \frac{N_{11}(\textbf{AB})+N_{00}(\textbf{AB})-N_{01}(\textbf{AB})-N_{10}(\textbf{AB})}{N_{11}(\textbf{AB})+N_{00}(\textbf{AB})+N_{01}(\textbf{AB})+N_{10}(\textbf{AB})} ,
\end{equation}&lt;/p&gt;

&lt;p&gt;and&lt;/p&gt;

&lt;p&gt;\(N_{ij}(\textbf{AB}) \) is a number of counts registered in a given state \(|i,j&amp;gt;\), where \(i,j=\{0,1\}\).&lt;/p&gt;

&lt;h3 id=&quot;qm-errors&quot;&gt;QM errors&lt;/h3&gt;
&lt;hr /&gt;

&lt;p&gt;While quantum simulator gives perfect agreement with the analytical solution, quantum calculations on real devices accompanied by certain noise/errors.  For example, measurement of the  Bell state  along the &lt;em&gt;z&lt;/em&gt;-axis, should not in principle, contains any contribution with the mixed spin. Still, QC produces non-zero probability to obtain  \(|01&amp;gt;\) and \(|10&amp;gt;\) states (check  &lt;a href=&quot;https://github.com/geonda/quantum-computing/tree/master/quantum_errors/&quot;&gt;&lt;em&gt;/quantum_errors/&lt;/em&gt;&lt;/a&gt;).&lt;/p&gt;

&lt;h3 id=&quot;manual&quot;&gt;Manual&lt;/h3&gt;
&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/geonda/quantum-computing&quot;&gt;source on github&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Required packages can be installed using &lt;em&gt;pip&lt;/em&gt; and are listed in &lt;em&gt;requirements.txt&lt;/em&gt; file.&lt;/p&gt;

&lt;p&gt;To get correlation &lt;img src=&quot;https://render.githubusercontent.com/render/math?math=S(%5Ctheta)&quot; alt=&quot;S(\theta)&quot; /&gt; use&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ python run.py&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;There are two options for QM calculations :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;using Aer qiskit simulator (&lt;code class=&quot;highlighter-rouge&quot;&gt;run_type='sim'&lt;/code&gt;);&lt;/li&gt;
  &lt;li&gt;using real quantum computer (&lt;code class=&quot;highlighter-rouge&quot;&gt;run_type='ibmq'&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To use ibm quantum computer one has to register &lt;a href=&quot;https://quantum-computing.ibm.com&quot;&gt;here&lt;/a&gt; and specify token and name of the machine in &lt;em&gt;ibm_setting.json&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;usefull-links&quot;&gt;Usefull links&lt;/h3&gt;
&lt;hr /&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://qiskit.org/textbook/ch-ex/hello-qiskit.html#Bell-test-for-classical-variables&quot;&gt;Qiskit docs&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://pythonprogramming.net/quantum-computer-programming-tutorial/&quot;&gt;QC programming tutorial&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;acknowledgements&quot;&gt;Acknowledgements&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;Thanks to Alexandra Malyavina&lt;/p&gt;

&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;
&lt;hr /&gt;</content><author><name>Andrey Geondzhian</name></author><summary type="html"></summary></entry><entry><title type="html">Launching a website with Jekyll in 8 steps</title><link href="http://localhost:4000/jekyll/update/2020/04/25/starting-jekyll.html" rel="alternate" type="text/html" title="Launching a website with Jekyll in 8 steps" /><published>2020-04-25T06:11:00+03:00</published><updated>2020-04-25T06:11:00+03:00</updated><id>http://localhost:4000/jekyll/update/2020/04/25/starting-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2020/04/25/starting-jekyll.html">&lt;p&gt;An obvious thing to do when you just launched blog on GitHub pages is to write about it.
To succeed in this journey, one only needs to have a Github account, and &lt;a href=&quot;https://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt; will do the rest.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Not all steps requires jekyll to be installed but it is genuinely useful and convenient tool to managing your website so i’d recommend to have it.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;step-1--decide-what-do-you-want-from-a-visual-and-practical-point-of-view&quot;&gt;Step 1 | Decide what do you want from a visual and practical point of view.&lt;/h3&gt;

&lt;p&gt;Check out Jekyll themes :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;http://jekyllthemes.org&quot;&gt;jekyllthemes.org&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://github.com/planetjekyll/awesome-jekyll-themes&quot;&gt;collection on GitHub&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://jekyllrb.com/docs/themes/&quot;&gt;jekyll official website&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;or start with a &lt;a href=&quot;https://github.com/jekyll/minima&quot;&gt;basic&lt;/a&gt; one. Just keep in mind that it is less likely you will find a perfect theme but they are easy to adjust for your unique needs. So choose something to stat with.&lt;/p&gt;

&lt;h3 id=&quot;step-2--fork-it-&quot;&gt;Step 2 | Fork it !&lt;/h3&gt;
&lt;hr /&gt;

&lt;p&gt;Well, you can either fork existent repository&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/fork.png&quot; alt=&quot;x&quot; /&gt;&lt;/p&gt;

&lt;p&gt;and then rename it as : your_website.github.io&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/cname.png&quot; alt=&quot;x&quot; /&gt;&lt;/p&gt;

&lt;p&gt;or you can start by creating new repository and later fill it with the theme’s content.&lt;/p&gt;

&lt;h3 id=&quot;step-3--clone-it-&quot;&gt;Step 3 | Clone it !&lt;/h3&gt;
&lt;hr /&gt;

&lt;p&gt;Create locally new working directory (eg ‘~/GitHub/’) and clone there your remote repository&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$git clone  https://github.com/your-username/your-repository.git&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you did not use fork method initially, it is time to download and save all files from the theme’s template to your working directory&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/gitclone.png&quot; alt=&quot;x&quot; /&gt;&lt;/p&gt;

&lt;p&gt;or generate them with &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll new your_website&lt;/code&gt;. And push those files back to remote server&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$git push origin master&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;step-4--share-master-branch&quot;&gt;Step 4 | Share master branch&lt;/h3&gt;
&lt;hr /&gt;

&lt;p&gt;Change the settings to show content of the master branch.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/chage_gh.png&quot; alt=&quot;x&quot; /&gt;&lt;/p&gt;

&lt;p&gt;et voilà  and that is it.&lt;/p&gt;

&lt;p&gt;At this point you should be able to see your webpage https://your_website.github.io filled with the default content.&lt;/p&gt;

&lt;h3 id=&quot;step-5--check-it-out-locally&quot;&gt;Step 5 | Check it out locally&lt;/h3&gt;
&lt;hr /&gt;

&lt;p&gt;Run &lt;a href=&quot;https://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt; it in the same directory as “&lt;em&gt;_config.yml&lt;/em&gt;” file of your new website&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$jekyll serve&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now local version of your webpage is accessible in the browser by ‘https://127.0.0.1:4000’&lt;/p&gt;

&lt;h3 id=&quot;step-5--filling-content&quot;&gt;Step 5 | Filling content&lt;/h3&gt;
&lt;hr /&gt;

&lt;p&gt;You can start by modifying   &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/config1.png&quot; alt=&quot;x&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After you specified general information about your webpage all content is paced in &lt;code class=&quot;highlighter-rouge&quot;&gt;index.md&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;_post/YYYY-MM-DD-your-post-name.md&lt;/code&gt; files. Note that you have to restart jekyll in order to correctly reflect changes in  &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt; but other files are updating on fly.&lt;/p&gt;

&lt;p&gt;Since Jekyll uses markdown format you might found useful this syntax &lt;a href=&quot;https://guides.github.com/features/mastering-markdown/&quot;&gt;guide&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;images&quot;&gt;Images&lt;/h4&gt;

&lt;p&gt;To link images in the post you can use hyper links pointing there location inside working directory.&lt;/p&gt;

&lt;p&gt;Eg : &lt;code class=&quot;highlighter-rouge&quot;&gt;/images/your_image.png&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;html&quot;&gt;HTML&lt;/h4&gt;

&lt;p&gt;To use any HTMl content you have to place it inside &lt;code class=&quot;highlighter-rouge&quot;&gt;/_includes/&lt;/code&gt; folder and call it from markdown as&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;{&lt;/code&gt;%&lt;code class=&quot;highlighter-rouge&quot;&gt; include your.html &lt;/code&gt;%&lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&quot;math&quot;&gt;Math&lt;/h4&gt;

&lt;p&gt;While markdown originally does not support &lt;code class=&quot;highlighter-rouge&quot;&gt;LATEX&lt;/code&gt; syntax you can use MathJax.js to fix it. Create &lt;code class=&quot;highlighter-rouge&quot;&gt;math.html&lt;/code&gt; in  &lt;code class=&quot;highlighter-rouge&quot;&gt;/_includes/&lt;/code&gt; with the following content&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;script type=&quot;text/javascript&quot;
        src=&quot;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-AMS_CHTML&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script type=&quot;text/x-mathjax-config&quot;&amp;gt;
        MathJax.Hub.Config({
          TeX: { equationNumbers: { autoNumber: &quot;AMS&quot; } }
        });
        &amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and use &lt;code class=&quot;highlighter-rouge&quot;&gt;{&lt;/code&gt;%&lt;code class=&quot;highlighter-rouge&quot;&gt; include math.html &lt;/code&gt;%&lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt;  in the beginning of your post.&lt;/p&gt;

&lt;h3 id=&quot;step-6--customization&quot;&gt;Step 6 | Customization&lt;/h3&gt;
&lt;hr /&gt;

&lt;p&gt;Jekyll gives priority to the scripts which are located in &lt;code class=&quot;highlighter-rouge&quot;&gt;/_includes&lt;/code&gt; directory, thus if you want to over ride something in your theme template you can just place your custom settings there in &lt;code class=&quot;highlighter-rouge&quot;&gt;HTML&lt;/code&gt; format (eg: for the footer modify &lt;code class=&quot;highlighter-rouge&quot;&gt;footer.hml&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Check page elements in  &lt;code class=&quot;highlighter-rouge&quot;&gt;/_layouts/&lt;/code&gt;  and fonts, styles, sizes, colors are defined in &lt;code class=&quot;highlighter-rouge&quot;&gt;/_sass/&lt;/code&gt; directory with &lt;code class=&quot;highlighter-rouge&quot;&gt;.scss&lt;/code&gt; extension. For &lt;em&gt;mimima&lt;/em&gt; theme :  check &lt;code class=&quot;highlighter-rouge&quot;&gt;/_sass/minima/initialize.scss&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you are planing to use additional plugins you have to put following lines at the end of &lt;code class=&quot;highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;  as&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;plugins:
   - jekyll-your_plagin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;and  &lt;code class=&quot;highlighter-rouge&quot;&gt;gem 'jekyll-your_plagin'&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;Gemfile&lt;/code&gt;.&lt;/p&gt;

&lt;h3 id=&quot;step-7--indexing-and-statistics&quot;&gt;Step 7 | Indexing and statistics&lt;/h3&gt;
&lt;p&gt;Jekyll -seo-tag plagin generates automaticaly generates set of tag based on the config file information which then can be used by the search engines.&lt;/p&gt;

&lt;p&gt;It might, however, take sometime before website will be indexed and appears in the search results. To check if the you website is in data base try searching &lt;code class=&quot;highlighter-rouge&quot;&gt;site:your_website.github.io&lt;/code&gt;. If result is negative you can directly ask google (for example) crawl you website by submitting you url
in &lt;a href=&quot;https://search.google.com/search-console/about&quot;&gt;google search console&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;If you want Google analytics on your site, first create an account and specify submit your resource. Then you should put suggested html code  into &lt;code class=&quot;highlighter-rouge&quot;&gt;_includes&lt;/code&gt; folder as &lt;code class=&quot;highlighter-rouge&quot;&gt;google-analytics.html&lt;/code&gt; :&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;script async src=&quot;https://www.googletagmanager.com/gtag/js?id=UX-XXXXXXXX&quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script&amp;gt;
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UX-XXXXXXXX');
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here ‘UX-XXXXXXXX’ is a personal token. And simply add &lt;code class=&quot;highlighter-rouge&quot;&gt;{&lt;/code&gt;%&lt;code class=&quot;highlighter-rouge&quot;&gt;- include google-analytics.html -&lt;/code&gt;%&lt;code class=&quot;highlighter-rouge&quot;&gt;}&lt;/code&gt; to inside &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;head&amp;gt;&amp;lt;/head&amp;gt;&lt;/code&gt; tags in your &lt;code class=&quot;highlighter-rouge&quot;&gt;head.html&lt;/code&gt; file.&lt;/p&gt;

&lt;h3 id=&quot;step-8--&quot;&gt;Step 8 | …&lt;/h3&gt;
&lt;hr /&gt;
&lt;p&gt;Just push it back and enjoy !&lt;/p&gt;</content><author><name>Andrey Geondzhian</name></author><summary type="html">An obvious thing to do when you just launched blog on GitHub pages is to write about it. To succeed in this journey, one only needs to have a Github account, and Jekyll will do the rest.</summary></entry></feed>